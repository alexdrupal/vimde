#!/bin/bash
#Script for change syntax in project from PHP
operation=$1
project_name=$2
project_language=0
project_type=0
vim_version=0
color_scheme=0
project_license=0
project_author=0
GREEN='\033[1;32m'
NORMAL='\033[0m'
Usage ()
{
  echo -e "${GREEN} Usage is: $0 (create | update) project_name ${NORMAL}"
  echo -e "${GREEN} Only A-Z,a-z,_and. is available in project name ${NORMAL}"
}
#Check the exist two arguments, name of operation and syntax project_name
if [[ $operation != "create" && $operation != "update" ]]; then
    Usage
    exit 1
fi
if [[ ! $project_name =~ ^[a-z_-.]+$ ]]; then
    Usage
    exit 1
fi
#If entered two arguments, entered path to project and check exist of folder
echo -e "${GREEN} Enter all path on your project: ${NORMAL}"
read project_path
if [[ ! -d "$project_path"  ]]; then
    echo -e "${GREEN} Not found folder of your project! ${NORMAL}"
    exit 1
fi
#Choiсe the project_language of two variants
#Uncommrnt this loop and delete low loop, if python language is aviable
#while [[ ! $project_language =~ ^[1-2]+$  ]]
while [[ ! $project_language =~ ^[1]$  ]]
do
    echo -e "${GREEN} Please, specify language (1-2) ${NORMAL}"
    echo -e "${GREEN} 1.Php ${NORMAL}"
    #echo -e "${GREEN} 2.Python"
    read project_language

    #Uncomment this block if python language is aviable
    #if [[ ! $project_language =~ ^[1-2]+$ ]]; then
    #echo -e "${GREEN} wrong choice, please enter 1 or 2 ${NORMAL}"
    #fi
    #If top block uncommented, then delete this block
    if [[ ! $project_language =~ ^[1]$ ]]; then
    echo -e "${GREEN} wrong choice, please enter 1 ${NORMAL}"
    fi

done

if [[ $project_language -eq  1 ]]; then
    project_language="php"
fi
#Uncomment this if block if python language is aviable
#if [[ $project_language -eq  2 ]]; then
#    project_language="python"
#fi

#Check value of variable project_language
echo -e "${GREEN} Your choice is $project_language ${NORMAL}"

#Choiсe the project_type of four variants
while [[ ! $project_type =~ ^[1-4]$ ]]
do
    echo -e "${GREEN} Please, specify project type (1-4) ${NORMAL}"
    echo -e "${GREEN} 1.Plain php ${NORMAL}"
    echo -e "${GREEN} 2.Drupal ${NORMAL}"
    echo -e "${GREEN} 3.Magento ${NORMAL}"
    echo -e "${GREEN} 4.Symfony ${NORMAL}"
    read project_type

    if [[ ! $project_type =~ ^[1-4]$ ]]; then
	echo -e "${GREEN} wrong choice, please enter value 1-4 ${NORMAL}"
    fi

done

if [[ $project_type -eq  1 ]]; then
    project_type="plain_php"
fi

if [[ $project_type -eq  2 ]]; then
    project_type="drupal"
fi

if [[ $project_type -eq  3 ]]; then
    project_type="magento"
fi

if [[ $project_type -eq  4 ]]; then
    project_type="symfony"
fi


#Check value of variable project_type
echo -e "${GREEN} Your choice is $project_type ${NORMAL}"

#Choiсe the vim_version of three variants
while [[ ! $vim_version =~ ^[1-3]$ ]]
do
    echo -e "${GREEN} Please, specify vim version (1-3) ${NORMAL}"
    echo -e "${GREEN} 1.Console VIM ${NORMAL}"
    echo -e "${GREEN} 2.GVIM ${NORMAL}"
    echo -e "${GREEN} 3.MacVIM ${NORMAL}"
    read vim_version

    if [[ ! $vim_version =~ ^[1-3]$ ]]; then
	echo -e "${GREEN} wrong choice, please enter value 1-3 ${NORMAL}"
    fi

done

if [[ $vim_version -eq  1 ]]; then
    vim_version="console_vim"
fi

if [[ $vim_version -eq  2 ]]; then
    vim_version="gvim"
fi

if [[ $vim_version -eq  3 ]]; then
    vim_version="macvim"
fi

#Check value of variable vim_version
echo -e "${GREEN} Your choice is $vim_version ${NORMAL}"

#Choiсe the color_scheme of four variants
while [[ ! $color_scheme =~ ^[1-4]$ ]]
do
    echo -e "${GREEN} Please, specify color scheme (1-4) ${NORMAL}"
    echo -e "${GREEN} 1.Desert ${NORMAL}" 
    echo -e "${GREEN} 2.Gruvbox ${NORMAL}"
    echo -e "${GREEN} 3.Atom ${NORMAL}"
    echo -e "${GREEN} 4.Sublime ${NORMAL}"
    read color_scheme

    if [[ ! $color_scheme =~ ^[1-4]$ ]]; then
	echo -e "${GREEN} wrong choice, please enter value 1-4 ${NORMAL}"
    fi

done

if [[ $color_scheme -eq  1 ]]; then
    color_scheme="desert"
fi

if [[ $color_scheme -eq  2 ]]; then
    color_scheme="gruvbox"
fi

if [[ $color_scheme -eq  3 ]]; then
    color_scheme="atom"
fi

if [[ $color_scheme -eq  4 ]]; then
    color_scheme="sublime"
fi

#Check value of variable color_scheme
echo -e "${GREEN} Your choice is $color_scheme ${NORMAL}"

#Create a hide folder in a home directory and gluing final vim config on three templates
mkdir -p $HOME/.vimde/$project_name
cat "$HOME/vimde/templates/$project_language/main.vimrc" "$HOME/vimde/templates/$project_language/$project_type.vimrc" "$HOME/vimde/templates/$project_language/keys.vimrc" > "$HOME/.vimde/$project_name/config.vimrc"

#Specify the project_license of five variants
while [[ ! $project_license =~ ^[1-5]$ ]]
do
    echo -e "${GREEN} Please, choose the project license (1-5) ${NORMAL}"
    echo -e "${GREEN} 1.GPL2 ${NORMAL}"
    echo -e "${GREEN} 2.GPL3 ${NORMAL}"
    echo -e "${GREEN} 3.OSL ${NORMAL}"
    echo -e "${GREEN} 4.Apache ${NORMAL}"
    echo -e "${GREEN} 5.MIT ${NORMAL}"
    read project_license

    if [[ ! $project_license =~ ^[1-5]$ ]]; then
	echo -e "${GREEN} wrong choice, please enter value 1-5 ${NORMAL}"
    fi

done

if [[ $project_license -eq  1 ]]; then
    project_license="gpl2"
fi

if [[ $project_license -eq  2 ]]; then
    project_license="gpl3"
fi

if [[ $project_license -eq  3 ]]; then
    project_license="osl"
fi

if [[ $project_license -eq  4 ]]; then
    project_license="apache"
fi

if [[ $project_license -eq  5 ]]; then
    project_license="mit"
fi

#Check value of variable project_license
echo -e "${GREEN} Your choice is $project_license ${NORMAL}"

echo ""
echo -e "${GREEN} Please enter your credentials. Example: John Doe jdoe@site.com ${NORMAL}"
read project_author

#Check value of variable project_author
echo -e "${GREEN} Your credentials is $project_author ${NORMAL}"

exit 0
